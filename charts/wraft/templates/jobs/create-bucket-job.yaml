{{- if and .Values.minio.enabled .Values.minio.createBucket.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-create-bucket-{{ .Release.Revision }}
  labels:
    {{- include "wraft.labels" . | nindent 4 }}
spec:
  backoffLimit: {{ .Values.minio.createBucket.backoffLimit | default 3 }}
  {{- if .Values.minio.createBucket.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ .Values.minio.createBucket.activeDeadlineSeconds }}
  {{- end }}
  {{- if .Values.minio.createBucket.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.minio.createBucket.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "wraft.labels" . | nindent 8 }}
        app.kubernetes.io/component: create-bucket-job
    spec:
      restartPolicy: Never
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- if or .Values.minio.createBucket.podSecurityContext.enabled .Values.global.podSecurityContext.enabled }}
      securityContext:
        {{- if .Values.minio.createBucket.podSecurityContext.enabled }}
        {{- omit .Values.minio.createBucket.podSecurityContext "enabled" | toYaml | nindent 8 }}
        {{- else }}
        {{- omit .Values.global.podSecurityContext "enabled" | toYaml | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: create-bucket
          image: "{{ .Values.minio.createBucket.image.repository }}:{{ .Values.minio.createBucket.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.minio.createBucket.image.pullPolicy | default "IfNotPresent" }}
          {{- if or .Values.minio.createBucket.containerSecurityContext.enabled .Values.global.containerSecurityContext.enabled }}
          securityContext:
            {{- if .Values.minio.createBucket.containerSecurityContext.enabled }}
            {{- omit .Values.minio.createBucket.containerSecurityContext "enabled" | toYaml | nindent 12 }}
            {{- else }}
            {{- omit .Values.global.containerSecurityContext "enabled" | toYaml | nindent 12 }}
            {{- end }}
          {{- end }}
          env:
            - name: MINIO_SERVER
              value: "http://{{ .Values.minio.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ index .Values.minio.service.ports 0 "port" }}"
            - name: MINIO_BUCKET
              value: "{{ .Values.minio.createBucket.bucketName | default "wraft" }}"
            - name: MINIO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-minio-secrets
                  key: MINIO_ROOT_USER
            - name: MINIO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-minio-secrets
                  key: MINIO_ROOT_PASSWORD
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "‚è≥ Waiting for MinIO to be ready..."
              for i in $(seq 1 30); do
                if mc alias set myminio $MINIO_SERVER $MINIO_USER $MINIO_PASSWORD; then
                  echo "‚úÖ Connected to MinIO"
                  break
                fi
                if [ $i -eq 30 ]; then
                  echo "‚ùå Failed to connect to MinIO after 30 attempts"
                  exit 1
                fi
                echo "Retrying MinIO connection ($i)..."
                sleep 5
              done

              echo "üì¶ Checking if bucket $MINIO_BUCKET exists..."
              if mc ls myminio | grep -q "$MINIO_BUCKET"; then
                echo "‚úÖ Bucket $MINIO_BUCKET already exists"
              else
                echo "üöÄ Creating bucket $MINIO_BUCKET..."
                mc mb -p myminio/$MINIO_BUCKET
                mc policy set public myminio/$MINIO_BUCKET
              fi

              echo "üéâ Bucket setup completed successfully"
          resources:
            {{- toYaml .Values.minio.createBucket.resources | nindent 12 }}
{{- end }}


