apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-backend-migration-{{ .Release.Revision }}
  labels:
    {{- include "wraft.labels" . | nindent 4 }}
spec:
  backoffLimit: {{ .Values.backend.migration.backoffLimit | default 3 }}
  template:
    metadata:
      labels:
        {{- include "wraft.labels" . | nindent 8 }}
        app.kubernetes.io/component: backend-migration-job
    spec:
      restartPolicy: Never
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- with .Values.backend.podSecurityContext }}
      securityContext:
        {{- omit . "enabled" | toYaml | nindent 8 }}
      {{- else }}
      {{- with .Values.global.podSecurityContext }}
      securityContext:
        {{- omit . "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: migrator
          image: "{{ .Values.backend.migration.image.repository }}:{{ .Values.backend.migration.image.tag }}"
          imagePullPolicy: {{ .Values.backend.migration.image.pullPolicy | default "IfNotPresent" }}
          {{- with .Values.backend.containerSecurityContext }}
          securityContext:
            {{- omit . "enabled" | toYaml | nindent 12 }}
          {{- else }}
          {{- with .Values.global.containerSecurityContext }}
          securityContext:
            {{- omit . "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- end }}
          env:
            {{- range $key, $value := .Values.backend.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          envFrom:
            {{- toYaml .Values.backend.envFrom | nindent 12 }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "‚è≥ Waiting for database to be ready..."
              i=1
              while [ $i -le 30 ]; do
                DB_HOST=$(echo "$DATABASE_URL" | sed -E 's|.*@([^:/]+):([0-9]+).*|\1|')
                DB_PORT=$(echo "$DATABASE_URL" | sed -E 's|.*@([^:/]+):([0-9]+).*|\2|')
                if pg_isready -h "$DB_HOST" -p "$DB_PORT"; then
                  echo "‚úÖ Database is ready"
                  break
                fi
                if [ $i -eq 30 ]; then
                  echo "‚ùå Database not ready after 30 attempts"
                  exit 1
                fi
                echo "Attempt $i failed, retrying in 5 seconds..."
                sleep 5
                i=$((i + 1))
              done

              echo "üöÄ Running migrations..."
              ./migrate.sh || exit 1

              echo "üå± Running seeds..."
              ./seeds.sh || exit 1

              echo "üéâ Migration and seeding completed successfully"
          resources:
            {{- toYaml .Values.backend.migration.resources | nindent 12 }}






