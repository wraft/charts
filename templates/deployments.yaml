apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.web.name }}
  labels:
    {{- include "wraft.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.web.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.web.name }}
    spec:
      containers:
        - name: {{ .Values.web.name }}
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.web.service.targetPort }}
          env:
            {{- range $key, $value := .Values.web.env }}
            - name: {{ $key }}
              {{- if kindIs "map" $value }}
              {{- if hasKey $value "valueFrom" }}
              valueFrom:
                {{- $value.valueFrom | toYaml | nindent 16 }}
              {{- else }}
              {{- toYaml $value | nindent 14 }}
              {{- end }}
              {{- else }}
              value: {{ $value | quote }}
              {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}
  labels:
    {{- include "wraft.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.api.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.api.name }}
    spec:
      containers:
        - name: {{ .Values.api.name }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.api.service.targetPort }}
          env:
            - name: MIX_ENV
              value: 'prod'
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: wraft-secrets
                  key: SECRET_KEY_BASE
            - name: GUARDIAN_KEY
              valueFrom:
                secretKeyRef:
                  name: wraft-secrets
                  key: GUARDIAN_KEY
            - name: DATABASE_URL
              value: 'postgres://{{ .Values.db.env.POSTGRES_USER }}:{{ .Values.db.env.POSTGRES_PASSWORD }}@{{ .Values.db.name }}:{{ .Values.db.service.port }}/{{ .Values.db.env.POSTGRES_DB }}?ssl=false'
            - name: MINIO_URL
              value: 'http://minio.local:30080'
            - name: MINIO_HOST
              value: 'minio.local'
            - name: MINIO_PORT
              value: '30080'
            - name: MINIO_BUCKET
              value: 'wraft'
            - name: MINIO_ROOT_USER
              value: '{{ .Values.minio.env.MINIO_ROOT_USER }}'
            - name: MINIO_ROOT_PASSWORD
              value: '{{ .Values.minio.env.MINIO_ROOT_PASSWORD }}'
            - name: SENTRY_DSN
              value: 'https://public_key@app.getsentry.com/1'
            - name: XELATEX_PATH
              value: 'xelatex'
            - name: TYPESENSE_API_KEY
              value: '{{ .Values.typesense.env.TYPESENSE_API_KEY }}'
            - name: TYPESENSE_HOST
              value: '{{ .Values.typesense.name }}'
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.db.name }}
  labels:
    {{- include "wraft.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
        - name: {{ .Values.db.name }}
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.db.service.targetPort }}
          env:
            {{- range $key, $value := .Values.db.env }}
            - name: {{ $key }}
              {{- if kindIs "map" $value }}
              {{- if hasKey $value "valueFrom" }}
              valueFrom:
                {{- $value.valueFrom | toYaml | nindent 16 }}
              {{- else }}
              {{- toYaml $value | nindent 14 }}
              {{- end }}
              {{- else }}
              value: {{ $value | quote }}
              {{- end }}
            {{- end }}
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.db.resources | nindent 12 }}
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: {{ .Values.db.name }}-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.minio.name }}
  labels:
    {{- include "wraft.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.minio.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.minio.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.minio.name }}
    spec:
      containers:
        - name: {{ .Values.minio.name }}
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          {{- if .Values.minio.command }}
          command: {{ toYaml .Values.minio.command | nindent 12 }}
          {{- end }}
          ports:
            {{- range .Values.minio.service.ports }}
            - containerPort: {{ .targetPort }}
              name: {{ .name }}
            {{- end }}
          env:
            {{- range $key, $value := .Values.minio.env }}
            - name: {{ $key }}
              {{- if kindIs "map" $value }}
              {{- if hasKey $value "valueFrom" }}
              valueFrom:
                {{- $value.valueFrom | toYaml | nindent 16 }}
              {{- else }}
              {{- toYaml $value | nindent 14 }}
              {{- end }}
              {{- else }}
              value: {{ $value | quote }}
              {{- end }}
            {{- end }}
          volumeMounts:
            - name: minio-data
              mountPath: /data
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: {{ .Values.minio.name }}-pvc
---
{{- if .Values.typesense.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.typesense.name }}
  labels:
    {{- include "wraft.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.typesense.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.typesense.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.typesense.name }}
    spec:
      containers:
        - name: {{ .Values.typesense.name }}
          image: "{{ .Values.typesense.image.repository }}:{{ .Values.typesense.image.tag }}"
          imagePullPolicy: {{ .Values.typesense.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.typesense.service.port }}
              name: http
          env:
            {{- range $key, $value := .Values.typesense.env }}
            - name: {{ $key }}
              {{- if kindIs "map" $value }}
              {{- if hasKey $value "valueFrom" }}
              valueFrom:
                {{- $value.valueFrom | toYaml | nindent 16 }}
              {{- else }}
              {{- toYaml $value | nindent 14 }}
              {{- end }}
              {{- else }}
              value: {{ $value | quote }}
              {{- end }}
            {{- end }}
          volumeMounts:
            - mountPath: /data
              name: typesense-storage
      volumes:
        - name: typesense-storage
          persistentVolumeClaim:
            claimName: {{ .Values.typesense.name }}-pvc
            {{- if .Values.typesense.persistence.storageClass }}
            storageClassName: {{ .Values.typesense.persistence.storageClass }}
            {{- end }}
--- 
{{- end }}
